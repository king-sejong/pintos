FAIL
Kernel panic in run: PANIC at ../../filesys/inode.c:336 in inode_allow_write(): assertion `inode->deny_write_cnt <= inode->open_cnt' failed.
Call stack: 0xc01076d9 0xc010c1e3 0xc010ba5b 0xc010bb7a 0xc010ab70 0xc010b0d0 0xc0101a57 0xc0101b8f 0x804a234 0x804813a 0x8048170 0x80487bc
Translation of call stack:
In kernel.o:
0xc01076d9: debug_panic (.../../lib/kernel/debug.c:34)
0xc010c1e3: inode_allow_write (...../../filesys/inode.c:337)
0xc010ba5b: file_allow_write (.../../../filesys/file.c:141)
0xc010bb7a: file_close (...d/../../filesys/file.c:51)
0xc010ab70: close (...../userprog/syscall.c:265)
0xc010b0d0: syscall_handler (...../userprog/syscall.c:101)
0xc0101a57: intr_handler (..../threads/interrupt.c:361)
0xc0101b8f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-twice:
0x0804a234: close (...../lib/user/syscall.c:141)
0x0804813a: test_main (...userprog/close-twice.c:18)
0x08048170: main (...ild/../../tests/main.c:13)
0x080487bc: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
